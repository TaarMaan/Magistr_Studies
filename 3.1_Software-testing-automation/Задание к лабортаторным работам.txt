Лабораторная работа №2

Интеграционное тестирование. Миграции баз данных. Testcontainers.

Цель и постановка задания
В процессе выполнения заданий ознакомиться с фреймворком для управления
миграциями баз данных Flyway и фреймворком для интеграционного тестирования
Testcontainers.
Задание 1
На основе первой лабораторной работы создать базу данных для хранения вычислений.
Таблица должна содержать – первое число и его систему счисления, второе число и его
систему счисления. Числа необходимо хранить в строковом виде. Столбцы с системами
счисления должны быть вычисляемыми на основе строкового представления числа (0b или
0B – двоичная, 0 – восьмеричная, 0x или 0X – шестнадцатеричная, иначе – десятичная), дату
и время вычисления, тип операции (сложение/вычитание/умножение/деление).
Задание 2
На основе первой лабораторной работы создать Spring Boot приложение, в котором
реализовать следующие рест енд-поинты:
1) Получение результата сложения/вычитания/умножения/деления двух чисел. Числа
могут быть в разных системах счисления. Все входные данные сохраняются в БД, в
том числе время и дата выполнения запроса.
2) Получение данных о всех вычислениях за определенный момент времени, с учетом
операции и используемой системы счисления для каждого из чисел.
3) Все DDL операции должны быть оформлены в виде миграций (Flyway или Liquibase).
Задание 3
Провести интеграционное тестирование приложения с использованием фреймворка
Testcontainers. Миграции с тестовыми данными (20-30 записей) должны накатываться при
запуске тестов (для каждого теста отдельно или перед запуском всех тестов)
--------------------------------------------------------------------------------------
Лабораторная работа №3
BDD тестирование

Цель и постановка задания
В процессе выполнения заданий познакомиться с языком Gherkin и с фреймворком
Cucumber.
Задание 1
Разработать несколько user story для программы, реализованной в процессе 2
лабораторной работы
Задание 2
1) Описать созданные user story в нотации Gherkin.
2) Исключить миграции по накатыванию данных в БД. Перед запуском
тестов БД должна быть пустая.
3) Реализовать интеграционное тестирование по разработанным user story с
помощью фреймворка Cucumber. Перед запуском сценариев в feature файле
устанавливается стартовое состояние БД (background). После прохода сценария, БД
должна возвращаться в исходное состояние (для этого можно использовать хуки).
4) В user story долен присутствовать минимум по одному сценарию для
передачи коллекций с помощью таблиц, с помощью класса, с помощью кастомного
разделителя. Сценарий с использованием


........................................................................................

Лабораторная работа №4
Тестирование Postman

Цель и постановка задания
В процессе выполнения заданий познакомиться с возможностью автоматизированного
тестирования API в Postman.
Задание 1
Создать несколько environments (например local и dev). Прописать для них
переменные, необходимые для формирования url (хост, порт, протокол).
Задание 2
Создать коллекцию, в которую добавить реквесты для:
- енд-поинта получения результата сложения
- енд-поинта получения результата умножения
- енд-поинта получения результата вычитания
- енд-поинта получения результата деления
- енд-поинта получения данных о всех вычислениях за определенный
момент времени

Задание 4
Создать pre-request script, для коллекции, который на основе выбранного environment
будет формировать url. Во всех реквестах заменить захардкоженную строку подключения, на
переменную, которая будет формироваться в pre-request скрипте
Задание 5
Для каждого реквеста необходимо несколько тестов (как положительных так
и негативных).

............................................................................................

Лабораторная работа №5
Angular. Модульное тестирование

Цель и постановка задания
В процессе выполнения заданий ознакомиться с фреймворком Angular. Изучить
основы модульного тестирования angular приложения
Задание 1
Реализовать простой ангуляр приложение-калькулятор использую в качестве бэкенда
программу, реализованную во второй лабораторной рабоет. На странице должны
присутствовать два инпута с лейблами, в которые пользователь может ввести только целые
числа. Между инпутами должен располагаться dropdown элемент с возможными значениями:
разделить, сложить, умножить, вычесть. Если выбрано разделить, то во второй инпут не
должно быть возможности ввести 0. Инпуты должны быть реализованы в виде отдельного
ангуляр компонента. Пользователю должна быть дана возможность выбрать систему
счисления. Для каждой системы счисления должен быть контроль ввода чисел (например
если это двоичная система, то вводить можно только 0 и 1). На странице также должна
находиться кнопка по нажатию на которую выполнится соответствующее арифметическое
действие. Результат должен быть выведен в отдельном html тэге (div, input и т.д.).
Задание 2
Реализовать директиву, которая окрасит результат в красный цвет, если он меньше
нуля, в черный – если равен нулю и в зеленый – если больше нуля.
Задание 3
Реализовать собственный Pipe фильтр, который принимает в качестве входного
значения количество знаков после запятой. Применить реализованный pipe фильтр к
результату.
Задание 4
Написать Unit тесты для директивы, фильтра и для каждого angular компонента. В
качестве фреймворка для тестирования можно использовать Jasmine или Jest.

...............................................................................................

Лабораторная работа №6
Angular. End-2-end тестирование

Цель и постановка задания
В процессе выполнения заданий ознакомиться с библиотеками для сквозного
тестирования front-end приложений. За основу взять приложение из 5 лабораторной работы.
В качестве фреймворка для тестирования нужно использовать Protractor (selenium).

Задание
Необходимо создать несколько UI тестов.
1) Проверить, что у нас на странице существуют инпуты, дропдаун и кнопка для
получения результата.
2) Проверить, что корректно работают все арифметические действия
3) Проверить, что в поля ввода можно ввести только цифры.
4) Проверить, что при выборе деления во второй инпут нельзя ввести 0
5) Проверить, что при выборе шестнадцатеричной системы счисления в инпуты
можно вводить соответствующие буквы
6) Проверить, цвета результата в зависимости от знака